{"version":3,"sources":["../ssw.js"],"names":[],"mappings":"AAAA,IAAI,MAAM,YAAW;AACjB,YAAQ,GAAR,CAAY,KAAZ,CAAkB,OAAlB,EAA2B,SAA3B;AACH,CAFD;;AAIA,IAAI,IAAI,UAAS,QAAT,EAAmB;AACvB,WAAO,SAAS,aAAT,CAAuB,QAAvB,CAAP;AACH,CAFD;;AAIA,IAAI,KAAK,UAAS,QAAT,EAAmB;AACxB,WAAO,SAAS,gBAAT,CAA0B,QAA1B,CAAP;AACH,CAFD;;AAIA,IAAI,aAAa,UAAS,OAAT,EAAkB,IAAlB,EAAwB;AACxC,YAAQ,kBAAR,CAA2B,WAA3B,EAAwC,IAAxC;AACA,CAFD;;AAIA,IAAI,YAAY,UAAS,OAAT,EAAkB,SAAlB,EAA6B,QAA7B,EAAuC;AACnD,YAAQ,gBAAR,CAAyB,SAAzB,EAAoC,QAApC;AACH,CAFD;;AAIA,IAAI,cAAc,UAAS,OAAT,EAAkB,SAAlB,EAA6B;AAC3C,QAAI,QAAQ,SAAR,CAAkB,QAAlB,CAA2B,SAA3B,CAAJ,EAA2C;AACvC,gBAAQ,SAAR,CAAkB,MAAlB,CAAyB,SAAzB;AACH,KAFD,MAEO;AACH,gBAAQ,SAAR,CAAkB,GAAlB,CAAsB,SAAtB;AACH;AACJ,CAND;;AAQA,IAAI,iBAAiB,UAAS,SAAT,EAAoB;AACrC,QAAI,WAAW,MAAM,SAArB;AACA,QAAI,WAAW,SAAS,gBAAT,CAA0B,QAA1B,CAAf;AACA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,SAAS,MAA7B,EAAqC,GAArC,EAA0C;AACtC,YAAI,IAAI,SAAS,CAAT,CAAR;AACA,UAAE,SAAF,CAAY,MAAZ,CAAmB,SAAnB;AACH;AACJ,CAPD;;AASA,IAAI,UAAU,UAAS,QAAT,EAAmB,SAAnB,EAA8B,QAA9B,EAAwC;AAClD,QAAI,WAAW,SAAS,gBAAT,CAA0B,QAA1B,CAAf;AACA,SAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,SAAS,MAA5B,EAAoC,GAApC,EAAyC;AACrC,YAAI,IAAI,SAAS,CAAT,CAAR;AACA,kBAAU,CAAV,EAAa,SAAb,EAAwB,QAAxB;AACH;AACJ,CAND;;AAQA;AACA,IAAI,OAAO,UAAS,OAAT,EAAkB,QAAlB,EAA4B;AACnC,WAAO,QAAQ,aAAR,CAAsB,QAAtB,CAAP;AACH,CAFD","file":"ssw-compiled.js","sourcesContent":["var log = function() {\r\n    console.log.apply(console, arguments)\r\n}\r\n\r\nvar e = function(selector) {\r\n    return document.querySelector(selector)\r\n}\r\n\r\nvar es = function(selector) {\r\n    return document.querySelectorAll(selector)\r\n}\r\n\r\nvar appendHtml = function(element, html) {\r\n\telement.insertAdjacentHTML('beforeend', html)\r\n}\r\n\r\nvar bindEvent = function(element, eventName, callback) {\r\n    element.addEventListener(eventName, callback)\r\n}\r\n\r\nvar toggleClass = function(element, className) {\r\n    if (element.classList.contains(className)) {\r\n        element.classList.remove(className)\r\n    } else {\r\n        element.classList.add(className)\r\n    }\r\n}\r\n\r\nvar removeClassAll = function(className) {\r\n    var selector = '.' + className\r\n    var elements = document.querySelectorAll(selector)\r\n    for (var i = 0; i < elements.length; i++) {\r\n        var e = elements[i]\r\n        e.classList.remove(className)\r\n    }\r\n}\r\n\r\nvar bindAll = function(selector, eventName, callback) {\r\n    var elements = document.querySelectorAll(selector)\r\n    for(var i = 0; i < elements.length; i++) {\r\n        var e = elements[i]\r\n        bindEvent(e, eventName, callback)\r\n    }\r\n}\r\n\r\n// find 函数可以查找 element 的所有子元素\r\nvar find = function(element, selector) {\r\n    return element.querySelector(selector)\r\n}\r\n"]}