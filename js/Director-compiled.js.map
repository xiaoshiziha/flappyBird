{"version":3,"sources":["Director.js"],"names":[],"mappings":"AAAA;;;;AAII;AACJ,SAAQ,SAAR,QAAwB,qBAAxB;AACA,SAAQ,QAAR,QAAuB,uBAAvB;AACA,SAAQ,UAAR,QAAyB,yBAAzB;;AAEA,OAAO,MAAM,QAAN,CAAe;AACnB,WAAO,WAAP,GAAqB;AAChB,YAAI,CAAC,SAAS,QAAd,EAAwB;AACpB,qBAAS,QAAT,GAAoB,IAAI,QAAJ,EAApB;AACH;AACD,eAAO,SAAS,QAAhB;AACH;AACD,kBAAc;AACV,aAAK,SAAL,GAAiB,UAAU,WAAV,EAAjB;AACH;;AAED,mBAAe;AACX,cAAM,SAAS,OAAO,WAAP,GAAqB,CAApC;AACA,cAAM,SAAS,OAAO,WAAP,GAAqB,CAApC;AACA,cAAM,MAAM,SAAS,KAAK,MAAL,MAAiB,SAAS,MAA1B,CAArB;AACA,aAAK,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,IAA9B,CAAmC,IAAI,QAAJ,CAAa,GAAb,CAAnC;AACA,aAAK,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,IAA9B,CAAmC,IAAI,UAAJ,CAAe,GAAf,CAAnC;AACH;AACD,UAAM;AACF,aAAK,SAAL,CAAe,GAAf,CAAmB,YAAnB,EAAiC,IAAjC;AACA,aAAK,SAAL,CAAe,GAAf,CAAmB,MAAnB,EAA2B,IAA3B;AACA,aAAK,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,OAA9B,CAAsC,UAAS,KAAT,EAAgB;AAClD,kBAAM,IAAN;AACH,SAFD;AAGA,YAAI,QAAQ,YAAY,MAAM,KAAK,GAAL,EAAlB,CAAZ;AACA,aAAK,SAAL,CAAe,GAAf,CAAmB,OAAnB,EAA4B,KAA5B;AAEH;AA3BiB","file":"Director-compiled.js","sourcesContent":["/**\n * @Date:   2018-03-20T17:40:14+08:00\n * @Last modified time: 2018-03-20T17:40:14+08:00\n */\n    //导演类，控制游戏的逻辑\nimport {DataStore} from \"./base/DataStore.js\";\nimport {UpPencil} from \"./runtime/UpPencil.js\";\nimport {DownPencil} from \"./runtime/DownPencil.js\";\n\nexport class Director {\n   static getInstance() {\n        if (!Director.instance) {\n            Director.instance = new Director();\n        }\n        return Director.instance;\n    }\n    constructor() {\n        this.dataStore = DataStore.getInstance();\n    }\n\n    createPencil() {\n        const minTop = Window.innerHeight / 8;\n        const maxTop = Window.innerHeight / 2;\n        const top = minTop + Math.random() * (maxTop - minTop);\n        this.dataStore.get('pencils').push(new UpPencil(top));\n        this.dataStore.get('pencils').push(new DownPencil(top));\n    }\n    run() {\n        this.dataStore.get('background').draw()\n        this.dataStore.get('land').draw()\n        this.dataStore.get('pencils').forEach(function(value) {\n            value.draw()\n        })\n        let timer = setInterval(() => this.run())\n        this.dataStore.put('timer', timer)\n\n    }\n}\n"]}